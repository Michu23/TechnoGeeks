# Generated by Django 4.0.5 on 2022-06-25 09:07

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Advisor', 'Advisor'), ('Communication', 'Communication'), ('Finance', 'Finance'), ('Lead', 'Lead'), ('Placement', 'Placement'), ('Student', 'Student')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Placement', 'Placement'), ('AdvisorChange', 'Advisor Change'), ('BatchShift', 'Batch Shift'), ('Termination', 'Termination'), ('Message', 'Message')], max_length=20)),
                ('content', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('creator', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('photo', models.CharField(blank=True, default='https://res.cloudinary.com/da3qthae5/image/upload/v1655698734/my%20files/hus89vdrrn2mzxxi6xo8.jpg', max_length=200, null=True)),
                ('public_id', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('signature', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('timestamp', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='', max_length=7)),
                ('father', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('father_contact', models.BigIntegerField(blank=True, default=None, null=True)),
                ('mother', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('mother_contact', models.BigIntegerField(blank=True, default=None, null=True)),
                ('guardian', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('relation', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('address', models.TextField(blank=True, default='', max_length=100, null=True)),
                ('village', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('taluk', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('education', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('college', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('experience', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('company', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('designation', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('mobile', models.BigIntegerField(blank=True, default=None, null=True)),
                ('govtid', models.ImageField(blank=True, upload_to='Media/Id')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_lead', models.BooleanField(default=False, null=True)),
                ('is_student', models.BooleanField(default=False, null=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='User.department')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
